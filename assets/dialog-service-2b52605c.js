var f=Object.defineProperty;var m=(n,i,e)=>i in n?f(n,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[i]=e;var a=(n,i,e)=>(m(n,typeof i!="symbol"?i+"":i,e),e);import{r as l,a8 as C}from"./index-129a3229.js";let k=class{constructor(i){a(this,"_key",-1);a(this,"_dialogs",[]);a(this,"_emitChange");this._emitChange=()=>{i([].concat(this._dialogs))}}open(i,e,t){const s=t??`l_#${++this._key}`,g={...e,visible:!0,skipFirstTransition:!1,onClose:()=>{var o;this.close(s),(o=e.onClose)==null||o.call(e)},afterVisibleChange:o=>{var d;if((d=e.afterVisibleChange)==null||d.call(e,o),!o){const h=this._dialogs.findIndex(_=>_.key===s);h!==-1&&(this._dialogs.splice(h,1),this._emitChange())}}},r=l.createElement(i,{key:s,...g}),c={key:s,node:r,close:()=>{this.close(s)},rerender:o=>{this.rerender(s,o)}};return this._dialogs.push(c),this._emitChange(),c}close(i){const e=this._dialogs.findIndex(t=>t.key===i);if(e!==-1){const t=this._dialogs[e];t.node=l.cloneElement(t.node,{visible:!1}),this._emitChange()}}rerender(i,e){const t=this._dialogs.findIndex(s=>s.key===i);if(t!==-1){const s=this._dialogs[t];s.node=l.cloneElement(s.node,e),this._emitChange()}}closeAll(i=!0){i?this._dialogs.forEach(e=>{e.node=l.cloneElement(e.node,{visible:!1})}):this._dialogs=[],this._emitChange()}};const u=new k(n=>{C.set("dialogs",n)});export{k as D,u as a};
