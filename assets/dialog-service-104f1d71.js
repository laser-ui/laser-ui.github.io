var r=Object.defineProperty;var _=(s,e,i)=>e in s?r(s,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[e]=i;var l=(s,e,i)=>(_(s,typeof e!="symbol"?e+"":e,i),i);import{j as f,a9 as y}from"./index-f37523c1.js";class C{constructor(e,i,t,n){this.key=e,this.type=i,this.props=t,this.service=n}get node(){const e=this.type;return f.jsx(e,{...this.props},this.key)}rerender(e){Object.assign(this.props,e),this.service.emitChange(this.key)}close(){this.props.visible=!1,this.service.emitChange(this.key)}}let m=class{constructor(e){l(this,"_key",-1);l(this,"_dialogs",[]);l(this,"_emitChange");this._emitChange=()=>{e([].concat(this._dialogs))}}open(e,i,t){const n=t??`l_#${++this._key}`,g={...i,visible:!0,skipFirstTransition:!1,onClose:()=>{var o;(o=i.onClose)==null||o.call(i);const a=this._dialogs.findIndex(h=>h.key===n);a!==-1&&this._dialogs[a].close()},afterVisibleChange:a=>{var o;if((o=i.afterVisibleChange)==null||o.call(i,a),!a){const h=this._dialogs.findIndex(d=>d.key===n);h!==-1&&(this._dialogs.splice(h,1),this._emitChange())}}},c=new C(n,e,g,this);return this._dialogs.push(c),this._emitChange(),c}emitChange(e){this._dialogs.findIndex(t=>t.key===e)!==-1&&this._emitChange()}closeAll(e=!0){e?this._dialogs.forEach(i=>{i.close()}):(this._dialogs=[],this._emitChange())}};const v=new m(s=>{y.set("dialogs",s)});export{v as D};
